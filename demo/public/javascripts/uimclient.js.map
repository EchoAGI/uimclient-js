{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/api.js","src/config.js","src/event.js","src/main.js","src/storage.js","src/transport/connector.js","src/version.js"],"names":["f","exports","module","define","amd","window","global","self","this","uimclient","r","e","n","t","o","i","c","require","u","a","Error","code","p","call","length","1","EventEmitter","Api","version","connector","id","sid","session","iids","that","on","data","received","last_receive","last_receive_overdue","prototype","heartbeat","timeout","timeout2","connected","now","Date","getTime","console","log","disconnect","sendAlive","send","type","noqueue","payload","Type","Data","send2","name","cb","obj","_","bind","apply","request","iid","Iid","one","d","dataType","triggerHandler","Token","token","Id","Sid","Messages","Users","requestAccountInfo","success","fault","Version","Ua","userAgent","Name","pin","Credentials","PIN","event","Account","sendMessage","msg","doAuth","api_url","handlerMap","onceHandlerMap","args","Array","len","handlers","handler","undefined","push","v","Connector","Config","UIMClientSDK","api","connect","Storage","result","accounts","get","account","key","error","connecting","connecting_timeout","disabled","queue","url","protocol","conn","WebSocket","onopen","target","onerror","onclose","onmessage","setTimeout","warn","reconnect","close","clearTimeout","forgetAndReconnect","info","shift","JSON","parse","stringify","ready","func"],"mappings":"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","file":"uimclient.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","var EventEmitter = require('./event')\n\nvar Api = function(version, connector) {\n    this.version = version\n    this.id = null\n    this.sid = null\n    this.session = {}\n    this.connector = connector\n    this.iids = 0\n\n    this.e = new EventEmitter()\n\n    var that = this\n    connector.e.on('received', function(data) {\n        that.received(data)\n    })\n\n    // Heartbeat support\n    this.last_receive = null\n    this.last_receive_overdue = false\n}\n\nApi.prototype.heartbeat = function(timeout, timeout2) {\n    // Heartbeat emitter.\n\tvar last_receive = this.last_receive\n\tif (this.connector.connected) {\n\t\tif (last_receive !== null) {\n\t\t\t// console.log(\"api heartbeat\", this.last_receive)\n\t\t\tvar now = new Date().getTime()\n\t\t\tif (this.last_receive_overdue) {\n\t\t\t\tif (now > last_receive + timeout2) {\n\t\t\t\t\tconsole.log(\"Reconnecting because alive timeout was reached.\")\n\t\t\t\t\tthis.last_receive_overdue = false\n\t\t\t\t\tthis.last_receive = null\n\t\t\t\t\tthis.connector.disconnect(true)\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (now > last_receive + timeout) {\n\t\t\t\t\t//console.log(\"overdue 1\")\n\t\t\t\t\tthis.last_receive_overdue = true\n\t\t\t\t\tthis.sendAlive(now)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} else {\n\t\tthis.last_receive = null\n\t\tthis.last_receive_overdue = false\n\t}\n}\n\nApi.prototype.send = function(type, data, noqueue) {\n    var payload = {\n        Type: type,\n        Data: data\n    };\n    //console.log(\"<<<<<<<<<<<<\", JSON.stringify(payload, null, 2));\n    this.connector.send(payload, noqueue)\n}\n\nApi.prototype.send2 = function(name, cb) {\n    var obj = {\n        send: _.bind(function(type, data) {\n            if (cb) {\n                cb(type, data)\n            }\n            this.send(type, data)\n        }, this)\n    }\n    return this.apply(name, obj)\n}\n\nApi.prototype.request = function(type, data, cb, noqueue) {\n    var payload = {\n        Type: type,\n        Data: data\n    }\n\n    if (cb) {\n        var iid = ''+(this.iids++)\n        payload.Iid = iid\n        this.e.one(iid+'.request', cb)\n    }\n    this.connector.send(payload, noqueue)\n}\n\n// Helper hack function to send API requests to other destinations.\n// Simply provide an alternative send function on the obj Object.\nApi.prototype.apply = function(name, obj) {\n\tvar f = this[name]\n\treturn _.bind(f, obj)\n}\n\nApi.prototype.received = function(d) {\n    // Store received timestamp.\n    var now = new Date().getTime()\n    this.last_receive = now\n    this.last_receive_overdue = false\n\n    console.log('received: ', d)\n\n    var iid = d.Iid\n    var data = d.Data\n    var dataType = d.Type\n\n    if (iid) {\n        // Shortcut for iid registered responses.\n        this.e.triggerHandler(iid+'.request', [dataType, data]);\n        return;\n    }\n\n    switch (dataType) {\n        case \"AccountInfo\": // 账户信息\n            // console.log(\"Self received\", data);\n            if (data.Token) {\n                this.connector.token = data.Token\n            }\n            this.id = data.Id\n            this.sid = data.Sid\n            this.e.triggerHandler(\"received.account\", [data])\n            break\n        case \"IMProfile\":    // 返回给定im账号信息\n            //console.log(\"IMMessage received\", data.To, data.Answer);\n            this.e.triggerHandler(\"received.improfile\", [data.Messages]);\n            break;\n        case \"IMMessage\":   // 收到聊天消息\n            //console.log(\"IMMessage received\", data.To, data.Answer);\n            this.e.triggerHandler(\"received.immessage\", [data.Messages]);\n            break;\n        case \"IMContacts\":    // 返回给定im账号的联系人信息\n            //console.log(\"Connected users: \" + data.Users.length);\n            this.e.triggerHandler(\"received.imcontacts\", [data.Users]);\n            break;\n        default:\n            console.log(\"Unhandled type received:\", dataType, data);\n            break;\n    }\n}\n\n\nApi.prototype.requestAccountInfo = function(success, fault) {\n    var data = {\n        Version: this.version,\n        Ua: this.userAgent,\n        Name: name,\n        Type: \"\" // Selects the default room type.\n    };\n\n    if (pin) {\n        data.Credentials = {\n            PIN: pin\n        };\n    }\n\n    var that = this;\n    var onResponse = function(event, type, data) {\n        if (type === \"AccountInfo\") {\n            if (success) {\n                success(data.Account)\n            }\n            that.e.triggerHandler(\"received.accountinfo\", [data.Account])\n        } else {\n            if (fault) {\n                fault(data)\n            }\n        }\n    }\n\n    this.request(\"requestAccountInfo\", data, onResponse, true)\n}\n\nApi.prototype.sendMessage = function(msg) {\n    return this.send('IMMessage', msg)\n}\n\nApi.prototype.doAuth = function(token, cb) {\n    var onResponse = function(event, type, data) {\n        cb(data)\n    }\n\n    var data = { Token: token }\n\n    return this.request('doAuth', data, onResponse, false)\n}\n\nmodule.exports = Api","module.exports = {\n    api_url: 'ws://localhost:3001/'\n}","\nvar EventEmitter = function() {\n    this.handlerMap = {}\n    this.onceHandlerMap = {}\n}\n\nEventEmitter.prototype.triggerHandler = function(event, args) {\n    if (this.handlerMap[event] instanceof Array){\n        var handlers = this.handlerMap[event];\n\n        for (var i = 0, len = handlers.length; i < len; i++){\n            console.log('triggerHandler: ', args)\n            handlers[i].apply(this, args)\n        }\n    }\n\n    // once\n    if (this.onceHandlerMap[event] instanceof Array){\n        var handlers = this.onceHandlerMap[event];\n\n        for (var i = 0, len = handlers.length; i < len; i++){\n            handlers[i].apply(this, args)\n        }\n\n        delete this.onceHandlerMap[event]\n    }\n}\n\nEventEmitter.prototype.on = function(event, handler) {\n    var handlers = this.handlerMap[event]\n    if (handlers == undefined) {\n        handlers = []\n        this.handlerMap[event] = handlers\n    }\n\n    handlers.push(handler)\n}\n\nEventEmitter.prototype.one = function(event, handler) {\n    var handlers = this.onceHandlerMap[event]\n    if (handlers == undefined) {\n        handlers = []\n        this.onceHandlerMap[event] = handlers\n    }\n\n    handlers.push(handler)\n}\n\n\nmodule.exports = EventEmitter","var version = require('./version').v\n\nvar Connector = require('./transport/connector')\n\nvar Api = require('./api')\n\nvar Config = require('./config')\n\nvar UIMClientSDK = function() {\n    // require('./init').init()\n    var connector = new Connector()\n\n    this.api = new Api(this.version, connector)\n    connector.connect(Config.api_url)\n}\n\nUIMClientSDK.prototype.version = version\n\nmodule.exports = new UIMClientSDK()\n\n\n// var Api = require('./api') \n\nvar Storage = require('./storage')\n\n// do auth\nUIMClientSDK.prototype.doAuth = function(token, cb) {\n    this.api.doAuth(this.token, function(result) {\n        cb(result)\n    })\n}\n\nUIMClientSDK.prototype.send = function(msg) {\n    this.api.sendMessage(msg)\n}\n\n/**\n * 返回当前关联的账号列表\n */\nUIMClientSDK.prototype.accounts = function() {\n    return Storage.get('accounts')\n}\n\nUIMClientSDK.prototype.account = function(id) {\n    accounts = Storage.get('accounts')\n    return accounts[id]\n}\n\nUIMClientSDK.prototype.token = function(token) {\n    this.token = token\n    return this\n}\n","\nvar Storage = {}\n\nStorage.get = function(key) {\n    return null\n}\n\nmodule.exports = Storage","var EventEmitter = require('../event')\n\n\nvar timeout = 5000\nvar timeout_max = 20000\n\nvar Connector = function() {\n    this.e = new EventEmitter()\n    this.error = false\n    this.connected = false\n    this.connecting = null\n    this.connecting_timeout = timeout\n    this.disabled = false\n\n    this.token = null\n    this.queue = []\n}\n\nConnector.prototype.connect = function(url) {\n    if (this.disabled) return\n\n\tif (this.connecting !== null) {\n\t\tconsole.warn(\"Refusing to connect while already connecting\")\n\t\treturn\n    }\n        \n    this.error = false;\n\tthis.e.triggerHandler('connecting', [url]);\n\tthis.url = url;\n    if (this.token) {\n        url += ('?t=' + this.token);\n        //console.log(\"Reusing existing token\", this.token);\n    }\n\n    var that = this\n\n    this.protocol = 'TEXT'\n    var headers = {}\n\n    var conn = this.conn = new WebSocket(url)\n\n    // var conn = this.conn = new WebSocket(url, this.protocol, headers)\n    conn.onopen = function(event) {\n        if (event.target === that.conn) {\n            that.onopen(event)\n        }\n    }\n    conn.onerror = function(event) {\n        if (event.target === that.conn) {\n            that.onerror(event)\n        }\n    }\n    conn.onclose = function(event) {\n        if (event.target === that.conn) {\n            that.onclose(event)\n        }\n    };\n    conn.onmessage = function(event) {\n        if (event.target === that.conn) {\n            that.onmessage(event)\n        }\n    }\n\n    this.connecting = window.setTimeout(function() {\n\t\tconsole.warn(\"Connection timeout out after\", that.connecting_timeout)\n\t\tif (that.connecting_timeout < timeout_max) {\n\t\t\tthat.connecting_timeout += timeout;\n\t\t}\n\t\tthat.e.triggerHandler(\"error\")\n\t\tthat.reconnect();\n\t}, this.connecting_timeout)\n}\n\nConnector.prototype.disconnect = function(error) {\n    if (error) {\n        this.onerror(null)\n    } else {\n        this.conn.close()\n    }\n}\n\n\nConnector.prototype.reconnect = function() {\n    if (!this.url) {\n        return\n    }\n\n    this.close()\n\n    var url = this.url\n    this.url = null\n\n    setTimeout(_.bind(function() {\n        this.connect(url)\n    }, this), 200)\n}\n\nConnector.prototype.close = function() {\n    window.clearTimeout(this.connecting)\n    this.connecting = null\n    this.connected = false\n\n    if (this.conn) {\n        var conn = this.conn\n        this.conn = null\n        conn.close()\n    }\n}\n\nConnector.prototype.forgetAndReconnect = function() {\n    this.token = null\n    if (this.conn && this.connected) {\n        this.conn.close()\n    }\n}\n\nConnector.prototype.onopen = function(event) {\n    window.clearTimeout(this.connecting);\n    this.connecting = null;\n    this.connecting_timeout = timeout;\n\n    // Connection successfully established.\n    console.info(\"Connector on connection open.\")\n    this.connected = true\n    this.e.triggerHandler(\"open\", [null, event])\n\n    // Send out stuff which was previously queued.\n    var data;\n    while (this.queue.length > 0 && this.connected) {\n        data = this.queue.shift()\n        this.send(data)\n    }\n}\n\nConnector.prototype.onerror = function(event) {\n    window.clearTimeout(this.connecting)\n    this.connecting = null\n    this.connecting_timeout = timeout\n\n    //console.log(\"onerror\", event)\n    console.warn(\"Connector on connection error.\")\n    this.error = true\n    this.close()\n    this.e.triggerHandler(\"error\", [null, event])\n}\n\nConnector.prototype.onclose = function(event) {\n    window.clearTimeout(this.connecting)\n    this.connecting = null\n    this.connecting_timeout = timeout\n\n    //console.log(\"onclose\", event);\n    console.info(\"Connector on connection close.\", event, this.error)\n    this.close()\n    if (!this.error) {\n        this.e.triggerHandler(\"close\", [null, event])\n    }\n}\n\nConnector.prototype.onmessage = function(event) {\n    console.log(\"onmessage\", event)\n    var msg = JSON.parse(event.data)\n    this.e.triggerHandler(\"received\", [msg])\n}\n\nConnector.prototype.send = function(data, noqueue) {\n    if (!this.connected) {\n        if (!noqueue) {\n            this.queue.push(data)\n            console.warn(\"Queuing sending data because of not connected.\", data)\n        }\n        return\n    }\n    this.conn.send(JSON.stringify(data))\n}\n\nConnector.prototype.ready = function(func) {\n    /* Call a function whenever the Connection is ready */\n    this.e.on(\"open\", func)\n    if (this.connected) {\n        func()\n    }\n}\n\nmodule.exports = Connector","module.exports = {\n    v: '1.0.0'\n}"]}